name: Flutter action
# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - main

jobs:
# Windows build and release.
  build-and-release-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release
        # Upload generated apk to the artifacts.
      # - uses: actions/upload-artifact@v1
      #   with:
      #     name: release-windows-exe
      #     path: windowsapp\build\windows\runner\Release\
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: MacRecoveryX-${{github.ref_name}}-windows.zip
          directory: build/windows/runner/Release

      - name: upload to artificat windows
        uses: actions/upload-artifact@v1
        with:
          # Name of the command/step.
          name: release-windows
          # Path to the release apk.
          path: build/windows/runner/Release/MacRecoveryX-${{github.ref_name}}-windows.zip

      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/runner/Release/MacRecoveryX-${{github.ref_name}}-windows.zip

  # Linux build and release.
  build-and-release-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Install dependencies      
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs        
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: MacRecoveryX-${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
      - name: upload to artificat linux
        uses: actions/upload-artifact@v1
        with:
          # Name of the command/step.
          name: release-linux
          # Path to the release apk.
          path: build/linux/x64/release/bundle/MacRecoveryX-${{github.ref_name}}-linux.zip

      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/linux/x64/release/bundle/MacRecoveryX-${{github.ref_name}}-linux.zip

  # mac build and release.
  build-and-release-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Install project dependencies
        run: flutter pub get
      - name: Generate intermediates
        run: flutter pub run build_runner build --delete-conflicting-outputs        
      - name: Enable macOS build
        run: flutter config --enable-macos-desktop
      - name: Build artifacts
        run: flutter build macos --release

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: MacRecoveryX-${{github.ref_name}}-macos.zip
          directory: build/macos/Build/Products/Release
      - name: upload to artificat mac
        uses: actions/upload-artifact@v1
        with:
          # Name of the command/step.
          name: release-mac
          # Path to the release apk.
          path: build/macos/Build/Products/Release/MacRecoveryX-${{github.ref_name}}-macos.zip

      - name: macOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/macos/Build/Products/Release/MacRecoveryX-${{github.ref_name}}-macos.zip
